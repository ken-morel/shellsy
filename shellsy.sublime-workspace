{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"S_",
				"S_Object"
			],
			[
				"rs",
				"rstrip"
			],
			[
				"ne",
				"next_path"
			],
			[
				"str",
				"string_set"
			],
			[
				"dec",
				"decimal"
			],
			[
				"__",
				"__package__"
			],
			[
				"an",
				"annotate"
			],
			[
				"s",
				"stack"
			],
			[
				"S_E",
				"S_Exception"
			],
			[
				"fu",
				"fullstring"
			],
			[
				"full",
				"fullstring"
			],
			[
				"fi",
				"final_args"
			],
			[
				"com",
				"command"
			],
			[
				"comm",
				"command"
			],
			[
				"st",
				"stacktrace"
			],
			[
				"No",
				"NoSuchCommand"
			],
			[
				"get",
				"get_command"
			],
			[
				"sh",
				"shell"
			],
			[
				"Stac",
				"StackTrace"
			],
			[
				"vs",
				"values"
			],
			[
				"Va",
				"ValueError"
			],
			[
				"ev",
				"evaluate_literal"
			],
			[
				"la",
				"last_key"
			],
			[
				"is",
				"isdigit"
			],
			[
				"Fl",
				"False"
			],
			[
				"ret",
				"return"
			],
			[
				"par",
				"parse_arguments"
			],
			[
				"Comm",
				"Command"
			],
			[
				"sta",
				"stacktrace"
			],
			[
				"ad",
				"add_stack"
			],
			[
				"fil",
				"file_name"
			],
			[
				"CO",
				"COMMAND_NAME"
			],
			[
				"pars",
				"parse_command"
			],
			[
				"Ni",
				"NilType"
			],
			[
				"She",
				"ShellsyInterpreter"
			],
			[
				"co",
				"console"
			],
			[
				"set",
				"set_setting"
			],
			[
				"in",
				"indent"
			],
			[
				"wr",
				"write_text"
			],
			[
				"read_",
				"read_text"
			],
			[
				"ex",
				"exists"
			],
			[
				"MUI_ABORTWARNING",
				"define:MUI_ABORTWARNING_TEXT"
			],
			[
				"MUI_HEADER",
				"define:MUI_HEADERIMAGE_BITMAP"
			],
			[
				"MUI",
				"define:MUI_HEADERIMAGE"
			],
			[
				"fol",
				"folder"
			],
			[
				"fo",
				"folders"
			],
			[
				"name",
				"Name"
			],
			[
				"ha",
				"hash"
			],
			[
				"Not",
				"NotImplementedError"
			],
			[
				"exc",
				"except"
			],
			[
				"St",
				"Stack"
			],
			[
				"S",
				"StatusText"
			],
			[
				"mar",
				"markdown"
			],
			[
				"va",
				"values"
			],
			[
				"eval",
				"evaluate_literal"
			],
			[
				"v",
				"values"
			],
			[
				"__i",
				"__instancecheck__"
			],
			[
				"of",
				"offset"
			],
			[
				"cea",
				"ceasar_file"
			],
			[
				"ra",
				"randrange"
			],
			[
				"c",
				"ceasar_text"
			],
			[
				"she",
				"Shellsy"
			],
			[
				"pygmen",
				"pygments_lexer_cls"
			],
			[
				"prin",
				"print_formatted_text"
			],
			[
				"p",
				"print_formatted_text"
			],
			[
				"pro",
				"prompt_toolkit"
			],
			[
				"pa",
				"parent_text"
			],
			[
				"Ex",
				"Exception"
			],
			[
				"ST",
				"Stack"
			],
			[
				"Sig",
				"Signature"
			],
			[
				"stack",
				"stacktrace"
			],
			[
				"Sh",
				"ShellsyError"
			],
			[
				"arg",
				"argmaps"
			],
			[
				"kw",
				"kwmaps"
			],
			[
				"con",
				"content"
			],
			[
				"pare",
				"parent_text"
			],
			[
				"sys",
				"system"
			],
			[
				"a",
				"auto_evaluate"
			],
			[
				"STA",
				"STACKTRACE"
			],
			[
				"cont",
				"content"
			],
			[
				"Shellsy",
				"ShellsyError"
			],
			[
				"N",
				"NoSuchCommand"
			],
			[
				"Com",
				"CommandBlock"
			],
			[
				"Co",
				"CommandBlock"
			],
			[
				"pl",
				"plugin_shell"
			],
			[
				"plu",
				"plugin_dir"
			],
			[
				"Pa",
				"Path"
			],
			[
				"Py",
				"PygmentsTokens"
			],
			[
				"m",
				"merge_styles"
			],
			[
				"T",
				"TangoStyle"
			],
			[
				"mak",
				"makedirs"
			],
			[
				"dis",
				"dispatches"
			],
			[
				"C",
				"CommandCall"
			],
			[
				"Command",
				"CommandHelp"
			],
			[
				"para",
				"ParamDoc"
			],
			[
				"be",
				"begin"
			],
			[
				"fro",
				"from_function"
			],
			[
				"beg",
				"begin_docs"
			],
			[
				"re",
				"ret_docs"
			],
			[
				"def",
				"default="
			],
			[
				"dat",
				"dataclass"
			],
			[
				"un",
				"uni_name"
			],
			[
				"d",
				"description"
			],
			[
				"au",
				"author_email"
			],
			[
				"auth",
				"author_email"
			],
			[
				"ini",
				"initialize_plugin"
			],
			[
				"Valu",
				"ValueError"
			],
			[
				"Ar",
				"Arguments"
			],
			[
				"mkd",
				"mkdir"
			],
			[
				"Plu",
				"PluginConf"
			],
			[
				"se",
				"setdefault"
			],
			[
				"fin",
				"find_packages"
			],
			[
				"ty",
				"typing"
			],
			[
				"Con",
				"ContextVar"
			],
			[
				"me",
				"message_dialog"
			],
			[
				"eva",
				"evaluate_literal"
			],
			[
				"clas",
				"classmethod"
			],
			[
				"D",
				"DoesNotExist"
			],
			[
				"__is",
				"__instancecheck__"
			],
			[
				"Shell",
				"ShellsyNtaxError"
			],
			[
				"le",
				"lexers"
			],
			[
				"py",
				"python-value"
			],
			[
				"from",
				"from_exception"
			],
			[
				"Tr",
				"Traceback"
			],
			[
				"isal",
				"isalpha"
			],
			[
				"hs",
				"hasattr"
			],
			[
				"ar",
				"arguments"
			],
			[
				"key",
				"keywords"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "Package Control Messages\n========================\n\n\nHelium\n------\n\n  Helium package for Sublime Text\n  ===\n  \n  Helium is a package for Sublime Text, which provides in-editor code execution and autocomplete in interaction with Jupyter kernels.\n  The concept of an editor extension communicating Jupyter kernels is inspired by @nteract's splendid Atom package [Hydrogen](https://github.com/nteract/Hydrogen). I want something like it in Sublime Text, too.\n  \n  Any feedback is highly welcome. I hope this package will help your life with ST3!\n  \n  ![Introduction image](raw/images/README/animated.gif)\n  \n  \n  ## Installation\n  \n  Now this package is under the package control channel!\n  \n  You can install it with Package Control plugin, run `Package Control: Install Package`, then choose `Helium` from the package list.\n  \n  \n  ## Usage\n  \n  \n  ### Connecting to Jupyter kernels\n  \n  #### 1. The most basic way, start a kernelspec installed locally, as a subprocess of ST3 (the process stops when Sublime stops)\n  \n    1. Run `Helium: connect kernel` command.\n    2. Choose `New kernel`.\n    3. Choose the kernelspec you want to run.\n  \n  \n  #### 2. Connect to the kernel already runnning and connected to Helium\n  \n    1. Run `Helium: connect kernel` command.\n    2. Choose the kernel you want to connect.\n  \n  #### 3. Connect to a kernel already running under some other Jupyter app (such as Notebook)\n  \n    1. Get connection info of the kernel. The way to get connection info differ among kernels, see the doc of each kernel (in ipython kernel, you can get it by `%connect_info` magic.)\n    2. Run `Helium: connect kernel` command.\n    3. Choose `New kernel`.\n    4. Choose `(Enter connection info)`.\n    5. Enter the connection info (Helium accepts a path or connection info itself).\n  \n  \n  #### Using Python kernel installed via Conda\n  \n  Python kernel installed via Conda is not found by Jupyter by default. You should add the path to kernel into the `jupyter_path` entry of the config file.\n  \n  \n  ### Execution\n  \n  Execute code by `Helium: Execute Block` (whose command name is `helium_execute_block`).\n  \n  #### Code cell\n  \n  Regions surrounded by `# %%` or `# <codecell>` (you can configure it in `cell_delimiter_pattern` option item) are considered as \"code cells\".\n  \n  You can execute a region by `Helium: Execute cell` (`helium_execute_cell`) or `Helium: Execute Cell and Move` command.\n  Each cell has a clickable \"Run Cell\" phantom that appears next to the cell markers to run the cell.\n  \n  ### Object inspection\n  \n  Get Object Inspection by `Helium: Get Object Inspection` (whose command name is `helium_get_object_inspection`).\n  \n  ### Autocomplete\n  \n  You should be able to get autocomplete from the kernel from the time you connected. If you don't want autocomplete, set `\"complete\"` as `false` in setting file.\n  \n  ### Other kernel manipulations\n  \n  You can restart, shutdown, and interrupt process via `Helium: Restart Kernel`, `Helium: Shutdown Kernel`, `Helium: Interrupt Kernel` commands.\n  \n  You can also run these command as a submenu of `Helium: List Kernels` command.\n  \n  \n  ## Motivation of development\n  \n  ### Why using Jupyter?\n  \n  We can execute code, retrieve results including images, get completions and object inspections by the Jupyter protocol regardless of the interpreter implementation of languages if it has Jupyter kernel.\n  If we try to do that by directly running interpreters there should be several interpreter-specific problems, but we can entrust the kernel maintainers on language-specific problems by using Jupyter.\n  \n  \n  ### Why not using Jupyter Notebook?\n  \n  I admit Jupyter Notebook is a powerful tool for instantly sharing small analysis work, exploring data or APIs, or making executable tutorials. Yes, I often use it, too.\n  However, in my opinion, it is not suited for projects with large code bases.\n  I want to jumpt across files instantly, make modules organized (not saved as `.ipynb`s), kick scripts with various parameters, and make project code more reusable and reproducible... but still I want to edit them with interactive feedback.\n\n\nInactivePanes\n-------------\n\n  Congratulations, you have successfully installed InactivePanes. However,\n  InactivePanes has been deprecated in favor of the native dimming feature of\n  Sublime Text 4.0.\n  \n  Please see the project README below for detailed instructions to enable this\n  feature if you are using a third-party theme that does not support it.\n  \n  https://github.com/SublimeText/InactivePanes#readme\n  \n  Following is the original installation message.\n  \n  ---\n  \n  When you want to disable this package, use Package Control's *Disable Package*\n  and *Enable Package* commands. Alternatively you can adjust your\n  `\"ignored_packages\"` setting manually.\n  \n  **Warning**: If you want to remove the package, use Package Control's *Remove\n  Package* command. Do **not** delete the plugin folder by yourself if you didn't\n  disable the package before and ST is not running! This will cause various error\n  messages because of outdated file references (but nothing critical).\n  \n  You can read the readme (with all available settings) online at:\n  https://github.com/SublimeText/InactivePanes#readme\n\n\nTable Editor\n------------\n\n  # Table Editor\n  \n  ## Overview\n  \n  *Table Editor* is a package for the *Sublime Text 2* and *Sublime Text 3* \n  editor for edit text tables. \n  *Table Editor* is has almost the same keys as Emacs-org mode table editor. \n  \n  *Table Editor* allow on easy way edit text table, it allows:\n  \n  - navigate with tab/shift tab \n  - insert/delete row\n  - insert/delete column\n  - auto align number cells to right, text cells to left, header cells to center\n  - move column left/right\n  - move row up/down\n  - split long cell\n  - join two rows into one\n  - convert selected CSV region into table\n  - direct support subset of wiki table syntax\n      - Simple\n      - EmacsOrgMode\n      - Pandoc(Grid Tables, Pipe Tables)\n      - Multi Markdown(support colspan in alpha status)\n      - reStructuredText\n      - Textile(support colspan and rowspan in alpha status)\n  - auto detect table syntax by view syntax\n  - switch between different table syntax on the fly\n  - temporary disable/enable table editor for current view\n  - customize table syntax with settings\n  - support CJK : Chinese, Japanese, Korean(alpha status)\n  - show demo film in scratch view\n  \n  \n  For more information see\n  \n  * Sublime Text - Select Preferences->Package Settings->Table Editor->README\n  * Online - https://github.com/vkocubinsky/SublimeTableEditor\n\n\nAdvancedNewFile\n---------------\n\n  Thank you for installing the AdvancedNewFile plugin.\n  \n  For more information please visit https://github.com/skuroda/Sublime-AdvancedNewFile.\n  \n  Note you may need to restart Sublime Text after installing this plugin.\n  \n  If you have any questions, comments, or run into issues, please let me know! Hope you enjoy the plugin.\n  \n  Thank you!\n\n\nJinja2\n------\n\n        _ _       _       ___\n       | (_)     (_)     |__ \\\n       | |_ _ __  _  __ _   ) |\n   _   | | | '_ \\| |/ _` | / /\n  | |__| | | | | | | (_| |/ /_\n   \\____/|_|_| |_| |\\__,_|____|\n                _/ |\n               |__/                                    by Ashwin Shenoy\n  ======================================================================\n  \n  Jinja2 package provides syntax definitions, snippets and completions\n  for Jinja templates in Sublime Text.\n  \n  Supported languages are:\n      CSS, C++, JavaScript, JSON, HTML, Markdown, Text, XML and YAML.\n  \n  Quick start\n  -----------\n  \n  Each syntax definition is assigned to a default set of file extensions,\n  following the schema of:\n  \n    - .<lang>.jinja\n    - .jinja.<lang>\n    - .<lang>.jinja2\n    - .jinja2.<lang>\n    - .<lang>.j2\n    - .j2.<lang>\n  \n  Default templating language is HTML with following file extensions:\n  \n    - .j2\n    - .jinja\n    - .jinja2\n    - .htm.j2\n    - .htm.jinja\n    - .htm.jinja2\n    - .html.j2\n    - .html.jinja\n    - .html.jinja2\n  \n  Having Problems ?\n  -----------------\n  \n  If you encounter any problems with Jinja2, or you think that it\n  can be improved to make your work easier, please log an issue with the \n  issue tracker:\n  \n      https://github.com/Sublime-Instincts/BetterJinja/issues\n",
			"settings":
			{
				"buffer_size": 8293,
				"line_ending": "Unix",
				"name": "Package Control Messages",
				"read_only": true,
				"scratch": true
			},
			"undo_stack":
			[
				[
					1,
					1,
					"package_control_message",
					{
						"message": "\n\nHelium\n------\n\n  Helium package for Sublime Text\n  ===\n  \n  Helium is a package for Sublime Text, which provides in-editor code execution and autocomplete in interaction with Jupyter kernels.\n  The concept of an editor extension communicating Jupyter kernels is inspired by @nteract's splendid Atom package [Hydrogen](https://github.com/nteract/Hydrogen). I want something like it in Sublime Text, too.\n  \n  Any feedback is highly welcome. I hope this package will help your life with ST3!\n  \n  ![Introduction image](raw/images/README/animated.gif)\n  \n  \n  ## Installation\n  \n  Now this package is under the package control channel!\n  \n  You can install it with Package Control plugin, run `Package Control: Install Package`, then choose `Helium` from the package list.\n  \n  \n  ## Usage\n  \n  \n  ### Connecting to Jupyter kernels\n  \n  #### 1. The most basic way, start a kernelspec installed locally, as a subprocess of ST3 (the process stops when Sublime stops)\n  \n    1. Run `Helium: connect kernel` command.\n    2. Choose `New kernel`.\n    3. Choose the kernelspec you want to run.\n  \n  \n  #### 2. Connect to the kernel already runnning and connected to Helium\n  \n    1. Run `Helium: connect kernel` command.\n    2. Choose the kernel you want to connect.\n  \n  #### 3. Connect to a kernel already running under some other Jupyter app (such as Notebook)\n  \n    1. Get connection info of the kernel. The way to get connection info differ among kernels, see the doc of each kernel (in ipython kernel, you can get it by `%connect_info` magic.)\n    2. Run `Helium: connect kernel` command.\n    3. Choose `New kernel`.\n    4. Choose `(Enter connection info)`.\n    5. Enter the connection info (Helium accepts a path or connection info itself).\n  \n  \n  #### Using Python kernel installed via Conda\n  \n  Python kernel installed via Conda is not found by Jupyter by default. You should add the path to kernel into the `jupyter_path` entry of the config file.\n  \n  \n  ### Execution\n  \n  Execute code by `Helium: Execute Block` (whose command name is `helium_execute_block`).\n  \n  #### Code cell\n  \n  Regions surrounded by `# %%` or `# <codecell>` (you can configure it in `cell_delimiter_pattern` option item) are considered as \"code cells\".\n  \n  You can execute a region by `Helium: Execute cell` (`helium_execute_cell`) or `Helium: Execute Cell and Move` command.\n  Each cell has a clickable \"Run Cell\" phantom that appears next to the cell markers to run the cell.\n  \n  ### Object inspection\n  \n  Get Object Inspection by `Helium: Get Object Inspection` (whose command name is `helium_get_object_inspection`).\n  \n  ### Autocomplete\n  \n  You should be able to get autocomplete from the kernel from the time you connected. If you don't want autocomplete, set `\"complete\"` as `false` in setting file.\n  \n  ### Other kernel manipulations\n  \n  You can restart, shutdown, and interrupt process via `Helium: Restart Kernel`, `Helium: Shutdown Kernel`, `Helium: Interrupt Kernel` commands.\n  \n  You can also run these command as a submenu of `Helium: List Kernels` command.\n  \n  \n  ## Motivation of development\n  \n  ### Why using Jupyter?\n  \n  We can execute code, retrieve results including images, get completions and object inspections by the Jupyter protocol regardless of the interpreter implementation of languages if it has Jupyter kernel.\n  If we try to do that by directly running interpreters there should be several interpreter-specific problems, but we can entrust the kernel maintainers on language-specific problems by using Jupyter.\n  \n  \n  ### Why not using Jupyter Notebook?\n  \n  I admit Jupyter Notebook is a powerful tool for instantly sharing small analysis work, exploring data or APIs, or making executable tutorials. Yes, I often use it, too.\n  However, in my opinion, it is not suited for projects with large code bases.\n  I want to jumpt across files instantly, make modules organized (not saved as `.ipynb`s), kick scripts with various parameters, and make project code more reusable and reproducible... but still I want to edit them with interactive feedback.\n"
					},
					"AQAAAAAAAAAAAAAAHRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"package_control_message",
					{
						"message": "\n\nInactivePanes\n-------------\n\n  Congratulations, you have successfully installed InactivePanes. However,\n  InactivePanes has been deprecated in favor of the native dimming feature of\n  Sublime Text 4.0.\n  \n  Please see the project README below for detailed instructions to enable this\n  feature if you are using a third-party theme that does not support it.\n  \n  https://github.com/SublimeText/InactivePanes#readme\n  \n  Following is the original installation message.\n  \n  ---\n  \n  When you want to disable this package, use Package Control's *Disable Package*\n  and *Enable Package* commands. Alternatively you can adjust your\n  `\"ignored_packages\"` setting manually.\n  \n  **Warning**: If you want to remove the package, use Package Control's *Remove\n  Package* command. Do **not** delete the plugin folder by yourself if you didn't\n  disable the package before and ST is not running! This will cause various error\n  messages because of outdated file references (but nothing critical).\n  \n  You can read the readme (with all available settings) online at:\n  https://github.com/SublimeText/InactivePanes#readme\n"
					},
					"AQAAAB0QAAAAAAAAdRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgMAAAAAAABGAwAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"package_control_message",
					{
						"message": "\n\nTable Editor\n------------\n\n  # Table Editor\n  \n  ## Overview\n  \n  *Table Editor* is a package for the *Sublime Text 2* and *Sublime Text 3* \n  editor for edit text tables. \n  *Table Editor* is has almost the same keys as Emacs-org mode table editor. \n  \n  *Table Editor* allow on easy way edit text table, it allows:\n  \n  - navigate with tab/shift tab \n  - insert/delete row\n  - insert/delete column\n  - auto align number cells to right, text cells to left, header cells to center\n  - move column left/right\n  - move row up/down\n  - split long cell\n  - join two rows into one\n  - convert selected CSV region into table\n  - direct support subset of wiki table syntax\n      - Simple\n      - EmacsOrgMode\n      - Pandoc(Grid Tables, Pipe Tables)\n      - Multi Markdown(support colspan in alpha status)\n      - reStructuredText\n      - Textile(support colspan and rowspan in alpha status)\n  - auto detect table syntax by view syntax\n  - switch between different table syntax on the fly\n  - temporary disable/enable table editor for current view\n  - customize table syntax with settings\n  - support CJK : Chinese, Japanese, Korean(alpha status)\n  - show demo film in scratch view\n  \n  \n  For more information see\n  \n  * Sublime Text - Select Preferences->Package Settings->Table Editor->README\n  * Online - https://github.com/vkocubinsky/SublimeTableEditor\n"
					},
					"AQAAAHUUAAAAAAAAvxkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQAAAAAAAABtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"package_control_message",
					{
						"message": "\n\nAdvancedNewFile\n---------------\n\n  Thank you for installing the AdvancedNewFile plugin.\n  \n  For more information please visit https://github.com/skuroda/Sublime-AdvancedNewFile.\n  \n  Note you may need to restart Sublime Text after installing this plugin.\n  \n  If you have any questions, comments, or run into issues, please let me know! Hope you enjoy the plugin.\n  \n  Thank you!\n"
					},
					"AQAAAL8ZAAAAAAAAPhsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmxYAAAAAAACbFgAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"package_control_message",
					{
						"message": "\n\nJinja2\n------\n\n        _ _       _       ___\n       | (_)     (_)     |__ \\\n       | |_ _ __  _  __ _   ) |\n   _   | | | '_ \\| |/ _` | / /\n  | |__| | | | | | | (_| |/ /_\n   \\____/|_|_| |_| |\\__,_|____|\n                _/ |\n               |__/                                    by Ashwin Shenoy\n  ======================================================================\n  \n  Jinja2 package provides syntax definitions, snippets and completions\n  for Jinja templates in Sublime Text.\n  \n  Supported languages are:\n      CSS, C++, JavaScript, JSON, HTML, Markdown, Text, XML and YAML.\n  \n  Quick start\n  -----------\n  \n  Each syntax definition is assigned to a default set of file extensions,\n  following the schema of:\n  \n    - .<lang>.jinja\n    - .jinja.<lang>\n    - .<lang>.jinja2\n    - .jinja2.<lang>\n    - .<lang>.j2\n    - .j2.<lang>\n  \n  Default templating language is HTML with following file extensions:\n  \n    - .j2\n    - .jinja\n    - .jinja2\n    - .htm.j2\n    - .htm.jinja\n    - .htm.jinja2\n    - .html.j2\n    - .html.jinja\n    - .html.jinja2\n  \n  Having Problems ?\n  -----------------\n  \n  If you encounter any problems with Jinja2, or you think that it\n  can be improved to make your work easier, please log an issue with the \n  issue tracker:\n  \n      https://github.com/Sublime-Instincts/BetterJinja/issues\n"
					},
					"AQAAAD4bAAAAAAAAZSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAthQAAAAAAAC2FAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "Microsoft Windows [Version 6.3.9600]                                                                                                                       \n(c) 2013 Microsoft Corporation. All rights reserved.                                                                                                       \n                                                                                                                                                           \nF:\\shellsy\\src>",
			"settings":
			{
				"buffer_size": 483,
				"line_ending": "Unix",
				"name": "Command Prompt",
				"scratch": true
			}
		},
		{
			"contents": "Microsoft Windows [Version 6.3.9600]                                                                                         \n(c) 2013 Microsoft Corporation. All rights reserved.                                                                         \n                                                                                                                             \nF:\\shellsy\\src>black *.py                                                                                                    \nreformatted main.py                                                                                                          \nreformatted setup.py                                                                                                         \n                                                                                                                             \nAll done! ✨ 🍰 ✨                                                                                                              \n2 files reformatted.                                                                                                         \n                                                                                                                             \nF:\\shellsy\\src>black */*.py                                                                                                  \nreformatted shellsy\\__main__.py                                                                                              \nreformatted shellsy\\help.py\nerror: cannot format shellsy\\lang.py: Cannot parse: 203:12:             raise ShellsyNtaxError(str(e))                       \nreformatted shellsy\\exceptions.py\nreformatted shellsy\\plugin.py                                                                                                \nreformatted shellsy\\settings.py                                                                                              \nreformatted shellsy\\interpreter.py                                                                                           \nreformatted tests\\test_parse_args.py                                                                                         \nreformatted shellsy\\shell.py                                                                                                 \nreformatted shellsy\\shellsy.py                                                                                               \nreformatted shellsy\\lexer.py                                                                                                 \n\nOh no! 💥 💔 💥                                                                                                                 \n10 files reformatted, 2 files left unchanged, 1 file failed to reformat.                                                     \n\nF:\\shellsy\\src>black */*.py\nreformatted shellsy\\lang.py                                                                                                  \n\nAll done! ✨ 🍰 ✨                                                                                                              \n1 file reformatted, 12 files left unchanged.                                                                                 \n\nF:\\shellsy\\src>",
			"settings":
			{
				"buffer_size": 3259,
				"line_ending": "Unix",
				"name": " ",
				"scratch": true
			}
		},
		{
			"file": "src/shellsy/lang.py",
			"settings":
			{
				"buffer_size": 11447,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					137,
					1,
					"left_delete",
					null,
					"",
					"AgAAAAAAAAABAAAAXCMAAAAAAABcIwAAAAAAAAAAAAAAAPC/AQAAAAEAAAA1BAAAAAAAAMFPAAAAAAAAAAAAAAAAAAA"
				],
				[
					144,
					1,
					"paste",
					null,
					"AQAAADUEAAAAAAAAuB0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAANQQAAAAAAAA1BAAAAAAAAAAAAAAAAPC/AQAAAAEAAAA1BAAAAAAAADUEAAAAAAAAAAAAAAAA8L8"
				],
				[
					146,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAALgdAAAAAAAAuR0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAuB0AAAAAAAC4HQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC4HQAAAAAAALgdAAAAAAAAAAAAAAAA8L8"
				],
				[
					176,
					1,
					"cut",
					null,
					"AQAAAHoDAAAAAAAAegMAAAAAAAAKAAAAZXhjZXB0aW9ucw",
					"AgAAAAAAAAABAAAAuB0AAAAAAAC4HQAAAAAAAAAAAAAAAPC/AQAAAAEAAAB6AwAAAAAAAIQDAAAAAAAAAAAAAAAA8L8"
				],
				[
					179,
					1,
					"left_delete",
					null,
					"AQAAAIIDAAAAAAAAggMAAAAAAAABAAAAKg",
					"AgAAAAAAAAABAAAArh0AAAAAAACuHQAAAAAAAAAAAAAAAPC/AQAAAAEAAACDAwAAAAAAAIMDAAAAAAAAAAAAAAAA8L8"
				],
				[
					180,
					1,
					"paste",
					null,
					"AQAAAIIDAAAAAAAAjAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAArR0AAAAAAACtHQAAAAAAAAAAAAAAAPC/AQAAAAEAAACCAwAAAAAAAIIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					208,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAALgdAAAAAAAAuR0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtx0AAAAAAAC3HQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC4HQAAAAAAALgdAAAAAAAAAAAAAAAAAAA"
				],
				[
					209,
					2,
					"left_delete",
					null,
					"AgAAALgdAAAAAAAAuB0AAAAAAAABAAAACrcdAAAAAAAAtx0AAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAtx0AAAAAAAC3HQAAAAAAAAAAAAAAAPC/AQAAAAEAAAC5HQAAAAAAALkdAAAAAAAAAAAAAAAA8L8"
				],
				[
					212,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAADIEAAAAAAAAMwQAAAAAAAAAAAAAMwQAAAAAAAA0BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtx0AAAAAAAC3HQAAAAAAAAAAAAAAAPC/AQAAAAEAAAAyBAAAAAAAADIEAAAAAAAAAAAAAAAgZUA"
				],
				[
					213,
					1,
					"paste",
					null,
					"AQAAADQEAAAAAAAAdhMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAuR0AAAAAAAC5HQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA0BAAAAAAAADQEAAAAAAAAAAAAAAAA8L8"
				],
				[
					214,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHYTAAAAAAAAdxMAAAAAAAAAAAAAdxMAAAAAAACDEwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+ywAAAAAAAD7LAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB2EwAAAAAAAHYTAAAAAAAAAAAAAAAA8L8"
				],
				[
					215,
					3,
					"left_delete",
					null,
					"AwAAAH8TAAAAAAAAfxMAAAAAAAAEAAAAICAgIHsTAAAAAAAAexMAAAAAAAAEAAAAICAgIHcTAAAAAAAAdxMAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAACC0AAAAAAAAILQAAAAAAAAAAAAAAAPC/AQAAAAEAAACDEwAAAAAAAIMTAAAAAAAAAAAAAAAA8L8"
				],
				[
					218,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAPwsAAAAAAAA/SwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/CwAAAAAAAD8LAAAAAAAAAAAAAAAAPC/AQAAAAEAAAB4EwAAAAAAAHgTAAAAAAAAAAAAAAAAAAA"
				],
				[
					240,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADEEAAAAAAAAMgQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/CwAAAAAAAD8LAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAxBAAAAAAAADEEAAAAAAAAAAAAAAAA8L8"
				],
				[
					241,
					1,
					"paste",
					null,
					"AQAAADIEAAAAAAAADgYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/SwAAAAAAAD9LAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAyBAAAAAAAADIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					250,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAPQGAAAAAAAA9QYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2S4AAAAAAADZLgAAAAAAAAAAAAAAAPC/AQAAAAEAAAD0BgAAAAAAAPQGAAAAAAAAAAAAAAAA8L8"
				],
				[
					252,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAAUHAAAAAAAABgcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2i4AAAAAAADaLgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAFBwAAAAAAAAUHAAAAAAAAAAAAAAAA8L8"
				],
				[
					281,
					9,
					"left_delete",
					null,
					"CQAAAP8AAAAAAAAA/wAAAAAAAAABAAAAbP4AAAAAAAAA/gAAAAAAAAABAAAAZf0AAAAAAAAA/QAAAAAAAAABAAAAcvwAAAAAAAAA/AAAAAAAAAABAAAAb/sAAAAAAAAA+wAAAAAAAAABAAAATfoAAAAAAAAA+gAAAAAAAAABAAAAIPkAAAAAAAAA+QAAAAAAAAABAAAAbvgAAAAAAAAA+AAAAAAAAAABAAAAZfcAAAAAAAAA9wAAAAAAAAABAAAASw",
					"AgAAAAAAAAABAAAA2y4AAAAAAADbLgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAA8L8"
				],
				[
					282,
					1,
					"insert",
					{
						"characters": "ken-mr"
					},
					"BgAAAPcAAAAAAAAA+AAAAAAAAAAAAAAA+AAAAAAAAAD5AAAAAAAAAAAAAAD5AAAAAAAAAPoAAAAAAAAAAAAAAPoAAAAAAAAA+wAAAAAAAAAAAAAA+wAAAAAAAAD8AAAAAAAAAAAAAAD8AAAAAAAAAP0AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0i4AAAAAAADSLgAAAAAAAAAAAAAAAPC/AQAAAAEAAAD3AAAAAAAAAPcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					283,
					1,
					"left_delete",
					null,
					"AQAAAPwAAAAAAAAA/AAAAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAA2C4AAAAAAADYLgAAAAAAAAAAAAAAAPC/AQAAAAEAAAD9AAAAAAAAAP0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					284,
					1,
					"insert",
					{
						"characters": "orel"
					},
					"BAAAAPwAAAAAAAAA/QAAAAAAAAAAAAAA/QAAAAAAAAD+AAAAAAAAAAAAAAD+AAAAAAAAAP8AAAAAAAAAAAAAAP8AAAAAAAAAAAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1y4AAAAAAADXLgAAAAAAAAAAAAAAAPC/AQAAAAEAAAD8AAAAAAAAAPwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					292,
					1,
					"left_delete",
					null,
					"AQAAAHQDAAAAAAAAdAMAAAAAAAAZAAAAZnJvbSAuIGltcG9ydCBleGNlcHRpb25zCg",
					"AgAAAAAAAAABAAAA2y4AAAAAAADbLgAAAAAAAAAAAAAAAPC/AQAAAAEAAAB0AwAAAAAAAI0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					317,
					1,
					"left_delete",
					null,
					"AQAAAOEDAAAAAAAA4QMAAAAAAAAcAAAAZnJvbSB0eXBpbmcgaW1wb3J0IEl0ZXJhYmxlCg",
					"AgAAAAAAAAABAAAAwi4AAAAAAADCLgAAAAAAAAAAAAAAAPC/AQAAAAEAAADhAwAAAAAAAP0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					322,
					1,
					"left_delete",
					null,
					"AQAAAP0DAAAAAAAA/QMAAAAAAAAhAAAAaW1wb3J0IGxleGVyCmltcG9ydCBvcwppbXBvcnQgcmUK",
					"AgAAAAAAAAABAAAApi4AAAAAAACmLgAAAAAAAAAAAAAAAPC/AQAAAAEAAAD9AwAAAAAAAB4EAAAAAAAAAAAAAAAA8L8"
				],
				[
					330,
					1,
					"left_delete",
					null,
					"AQAAABsEAAAAAAAAGwQAAAAAAAATAAAAaW1wb3J0IHJpY2guc3ludGF4Cg",
					"AgAAAAAAAAABAAAAhS4AAAAAAACFLgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAbBAAAAAAAAC4EAAAAAAAAAAAAAAAA8L8"
				],
				[
					337,
					1,
					"left_delete",
					null,
					"AQAAAAkEAAAAAAAACQQAAAAAAAASAAAAaW1wb3J0IHJpY2gucGFuZWwK",
					"AgAAAAAAAAABAAAAci4AAAAAAAByLgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAJBAAAAAAAABsEAAAAAAAAAAAAAAAA8L8"
				],
				[
					346,
					1,
					"left_delete",
					null,
					"AQAAABgEAAAAAAAAGAQAAAAAAADUAAAAZnJvbSBkYXRhY2xhc3NlcyBpbXBvcnQgZGF0YWNsYXNzCmZyb20gZGVjaW1hbCBpbXBvcnQgRGVjaW1hbApmcm9tIGluc3BlY3QgaW1wb3J0IFNpZ25hdHVyZQpmcm9tIGluc3BlY3QgaW1wb3J0IF9lbXB0eQpmcm9tIGluc3BlY3QgaW1wb3J0IHNpZ25hdHVyZQpmcm9tIHBhdGhsaWIgaW1wb3J0IFBhdGgKZnJvbSBweWdtZW50cyBpbXBvcnQgdW5pc3RyaW5nIGFzIHVuaQo",
					"AgAAAAAAAAABAAAAYC4AAAAAAABgLgAAAAAAAAAAAAAAAPC/AQAAAAEAAAAYBAAAAAAAAOwEAAAAAAAAAAAAAAAA8L8"
				],
				[
					357,
					1,
					"left_delete",
					null,
					"AQAAADUEAAAAAAAANQQAAAAAAACKAAAAZnJvbSByaWNoLm1hcmtkb3duIGltcG9ydCBNYXJrZG93bgpmcm9tIHR5cGluZyBpbXBvcnQgQW55CmZyb20gdHlwaW5nIGltcG9ydCBDYWxsYWJsZQpmcm9tIHR5cGluZyBpbXBvcnQgT3B0aW9uYWwKZnJvbSB0eXBpbmcgaW1wb3J0IFR5cGUK",
					"AgAAAAAAAAABAAAAjC0AAAAAAACMLQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA1BAAAAAAAAL8EAAAAAAAAAAAAAAAA8L8"
				],
				[
					362,
					1,
					"left_delete",
					null,
					"AQAAADQEAAAAAAAANAQAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAi0AAAAAAAACLQAAAAAAAAAAAAAAAPC/AQAAAAEAAAA1BAAAAAAAADUEAAAAAAAAAAAAAAAA8L8"
				],
				[
					370,
					1,
					"left_delete",
					null,
					"AQAAAOEDAAAAAAAA4QMAAAAAAAAoAAAAZnJvbSB0eXBpbmcgaW1wb3J0IE9wdGlvbmFsCmltcG9ydCByaWNoCg",
					"AgAAAAAAAAABAAAAAS0AAAAAAAABLQAAAAAAAAAAAAAAAPC/AQAAAAEAAADhAwAAAAAAAAkEAAAAAAAAAAAAAAAA8L8"
				],
				[
					379,
					1,
					"left_delete",
					null,
					"AQAAAGkDAAAAAAAAaQMAAAAAAAAtAAAAaW1wb3J0IG9zCgpmcm9tIGRhdGFjbGFzc2VzIGltcG9ydCBkYXRhY2xhc3MK",
					"AgAAAAAAAAABAAAA2SwAAAAAAADZLAAAAAAAAAAAAAAAAPC/AQAAAAEAAABpAwAAAAAAAJYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					389,
					1,
					"left_delete",
					null,
					"AQAAAPYAAAAAAAAA9gAAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAArCwAAAAAAACsLAAAAAAAAAAAAAAAAPC/AQAAAAEAAAD3AAAAAAAAAPcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					403,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"CAAAAMUSAAAAAAAAxxIAAAAAAAAAAAAArxIAAAAAAACxEgAAAAAAAAAAAACMEgAAAAAAAI4SAAAAAAAAAAAAAF4SAAAAAAAAYBIAAAAAAAAAAAAAJhIAAAAAAAAoEgAAAAAAAAAAAADkEQAAAAAAAOYRAAAAAAAAAAAAAMkRAAAAAAAAyxEAAAAAAAAAAAAAqREAAAAAAACrEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAqywAAAAAAACrLAAAAAAAAAAAAAAAAPC/AQAAAAEAAADGEgAAAAAAAKoRAAAAAAAAAAAAAADAWUA"
				],
				[
					433,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAJARAAAAAAAAkhEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAuywAAAAAAAC7LAAAAAAAAAAAAAAAAPC/AQAAAAEAAACXEQAAAAAAAJcRAAAAAAAAAAAAAADAXEA"
				],
				[
					438,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAJARAAAAAAAAkBEAAAAAAAACAAAAIyA",
					"AgAAAAAAAAABAAAAvSwAAAAAAAC9LAAAAAAAAAAAAAAAAPC/AQAAAAEAAACZEQAAAAAAAJkRAAAAAAAAAAAAAAAA8L8"
				],
				[
					440,
					1,
					"indent",
					null,
					"AQAAANcSAAAAAAAA2xIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAuywAAAAAAAC7LAAAAAAAAAAAAAAAAPC/AQAAAAEAAADqEgAAAAAAAOoSAAAAAAAAAAAAAADAXEA"
				],
				[
					445,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAvywAAAAAAAC/LAAAAAAAAAAAAAAAAPC/AQAAAAEAAADuEgAAAAAAAO4SAAAAAAAAAAAAAAAA8L8"
				]
			]
		}
	],
	"build_system": "Packages/User/black.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sass.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Packages/User/black.sublime-build",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sass.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sass.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Anaconda Python Builder",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Sbook",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Sbook",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sass.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Sbook",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/sass.sublime-build",
					""
				]
			],
			[
				"Anaconda Python Builder",
				""
			]
		],
		[
			[
				[
					"Packages/Default/Syntax Tests.sublime-build",
					""
				],
				[
					"Packages/Default/Syntax Tests.sublime-build",
					"All Syntaxes"
				],
				[
					"Packages/Default/Syntax Tests.sublime-build",
					"Performance"
				],
				[
					"Packages/Default/Syntax Tests.sublime-build",
					"Regex Compatibility"
				],
				[
					"Packages/User/Django.sublime-build",
					""
				]
			],
			[
				"Packages/User/Django.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Default/Syntax Tests.sublime-build",
					""
				],
				[
					"Packages/Default/Syntax Tests.sublime-build",
					"All Syntaxes"
				],
				[
					"Packages/Default/Syntax Tests.sublime-build",
					"Performance"
				],
				[
					"Packages/Default/Syntax Tests.sublime-build",
					"Regex Compatibility"
				],
				[
					"Packages/User/Django.sublime-build",
					""
				],
				[
					"Packages/User/Django.sublime-build",
					"pylint"
				]
			],
			[
				"Packages/User/Django.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Golang Build/Go.sublime-build",
					""
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Run"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Test"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Install"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Cross-Compile (Interactive)"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Clean"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sass.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Packages/Golang Build/Go.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/NSIS/NSIS.sublime-build",
					""
				],
				[
					"Packages/NSIS/NSIS.sublime-build",
					"strict"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sass.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Packages/NSIS/NSIS.sublime-build",
				"strict"
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/shellsy/shellsy.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sass.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Packages/shellsy/shellsy.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/black.sublime-build",
					""
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sass.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Packages/User/black.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/Django.sublime-build",
					""
				],
				[
					"Packages/User/Django.sublime-build",
					"pylint"
				]
			],
			[
				"Packages/User/Django.sublime-build",
				""
			]
		],
		[
			[
				[
					"Sbook",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Sbook",
				""
			]
		],
		[
			[
				[
					"Sbook",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				]
			],
			[
				"Packages/subliminal/Django.sublime-build",
				""
			]
		],
		[
			[
				[
					"Sbook",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/go.sublime-build",
					""
				],
				[
					"Packages/User/sass.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Packages/User/sass.sublime-build",
				""
			]
		],
		[
			[
				[
					"Sbook",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/sass.sublime-build",
					""
				]
			],
			[
				"Packages/User/sass.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: e",
				"Package Control: Enable Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"Package Control: add",
				"Package Control: Add Repository"
			],
			[
				"Package Control: I",
				"Package Control: Install Package"
			],
			[
				"Package Control: d",
				"Package Control: Disable Package"
			],
			[
				"Package Control: D",
				"Package Control: Disable Package"
			],
			[
				"open",
				"Sublime Files: Open Navigator"
			],
			[
				"ter",
				"Terminal: Open"
			],
			[
				"Package Control: Add",
				"Package Control: Add Repository"
			],
			[
				"Package Control: l",
				"Package Control: List Packages"
			],
			[
				"Package Control: i",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 130.0,
		"history":
		[
			"\nd",
			"\nimport socket; socket.socket(socket.AF_INET, socket.SOCK_STREAM).connect((\"localhost\", 49491))"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/F/shellsy",
		"/F/shellsy/src",
		"/F/shellsy/src/.pytest_cache",
		"/F/shellsy/src/.pytest_cache/v",
		"/F/shellsy/src/.pytest_cache/v/cache",
		"/F/shellsy/src/shellsy",
		"/F/shellsy/src/shellsy/__pycache__",
		"/F/shellsy/src/shellsy.egg-info",
		"/F/shellsy/src/tests",
		"/F/shellsy/src/tests/__pycache__"
	],
	"file_history":
	[
		"/F/shellsy/src/shellsy/plugin.py",
		"/F/shellsy/src/shellsy/lang.py",
		"/F/shellsy/src/shellsy/exceptions.py",
		"/F/shellsy/src/shellsy/shell.py",
		"/F/shellsy/src/shellsy/interpreter.py",
		"/F/shellsy/src/shellsy/lexer.py",
		"/F/shellsy/src/shellsy/shellsy.py",
		"/C/Users/CHEF SEC/AppData/Roaming/Sublime Text/Packages/SublimeFiles/SublimeFiles.sublime-settings",
		"/C/Users/CHEF SEC/AppData/Roaming/Sublime Text/Packages/User/Default (Windows).sublime-keymap",
		"/F/shellsy/src/shellsy/args.py",
		"/C/ken-morel/ai.py",
		"/F/linket/help",
		"/F/shellsy/.gitignore",
		"/F/shellsy/src/shellsy/settings.py",
		"/F/shellsy/src/shellsy/help.py",
		"/F/shellsy/src/shellsy/__main__.py",
		"/F/shellsy/src/shellsy/interpreter/__init__.py",
		"/F/shellsy/src/shellsy/interpreter/parser.py",
		"/F/shellsy/src/shellsy/interpreter/exceptions.py",
		"/F/shellsy/src/shellsy/interpreter/types.py",
		"/F/shellsy/src/shellsy/interpreter/repr.py",
		"/F/shellsy/src/test.shellsy",
		"/F/pyoload/src/pyoload/__init__.py",
		"/F/shellsy/src/setup.py",
		"/F/shellsy/compile.bat",
		"/F/shellsy/build/windows/list-files.py",
		"/C/NSIS/Examples/Modern UI/StartMenu.nsi",
		"/F/shellsy/src/main.py",
		"/F/shellsy/build-setup.nsi",
		"/C/NSIS/Examples/StartMenu/Example.nsi",
		"/C/NSIS/Examples/Modern UI/MultiLanguage.nsi",
		"/C/NSIS/Examples/Modern UI/HeaderBitmap.nsi",
		"/C/NSIS/Examples/Modern UI/Basic.nsi",
		"/C/NSIS/Examples/Modern UI/WelcomeFinish.nsi",
		"/F/shellsy/build-setup-nsis.bat",
		"/F/shellsy/src/shellsy/__init__.py",
		"/F/shellsy/src/del.py",
		"/C/Users/CHEF SEC/AppData/Roaming/Python/Python311-32/site-packages/comberload.py",
		"/F/shellsy/ceasar/ceasar/shellsy.py",
		"/F/shellsy/ceasar/ceasar/ceasar.py",
		"/F/Users/engon/AppData/Roaming/Python/Python312/site-packages/pygments/lexers/shell.py",
		"/C/Users/CHEF SEC/AppData/Roaming/Sublime Merge/Packages/User/Preferences.sublime-settings",
		"/F/shellsy/README.md",
		"/D/sbook/README.md",
		"/F/shellsy/storelsb/storelsb/shellsy.py",
		"/F/shellsy/shellsy.sublime-workspace",
		"/F/shellsy/tbtest.py",
		"/F/shellsy/src/build/lib/shellsy/args.py",
		"/F/shellsy/src/build/lib/shellsy/lang.py",
		"/C/Users/CHEF SEC/AppData/Roaming/ken-morel/shellsy/1.0.0/plugins/storelsb/shellsy.py",
		"/F/shellsy/storelsb/storelsb/__init__.py",
		"/F/shellsy/LICENSE",
		"/F/shellsy/src/shellsy/editor/__init__.py",
		"/F/shellsy/test.shellsy",
		"/C/Users/CHEF SEC/AppData/Roaming/Sublime Text/Packages/shellsy/shellsy.sublime-syntax",
		"/C/Users/CHEF SEC/AppData/Roaming/Sublime Text/Packages/shellsy/shellsy.sublime-build",
		"/C/Users/CHEF SEC/AppData/Roaming/ken-morel/shellsy/1.0.0/plugins/mt-1.0.0.dist-info/direct_url.json",
		"/F/shellsy/mt/mt/shell.py",
		"/F/Program Files/Python310/Lib/dataclasses.py",
		"/C/Program Files (x86)/Python311-32/Lib/contextvars.py",
		"/F/Program Files/Python310/Lib/typing.py",
		"/F/shellsy/src/tests/test_parse_args.py",
		"/C/Users/CHEF SEC/AppData/Roaming/Python/Python311-32/site-packages/pygments/lexers/python.py",
		"/F/djamago/src/djamago/__init__.py",
		"/F/shellsy/src/tests/__init__.py",
		"/C/Users/CHEF SEC/AppData/Local/ken-morel/shellsy/settings.json",
		"/C/Users/CHEF SEC/AppData/Roaming/Python/Python311-32/site-packages/pyoload/__init__.py",
		"/F/shellsy/src/comberload.py",
		"/F/shellsy/dockerfiles/dev.dockerfile",
		"/F/shellsy/docs/requirements.txt",
		"/F/shellsy/special_input.py",
		"/F/djamago/src/djamago/demo.py",
		"/F/shellsy/src/shellsy/types.py",
		"/F/shellsy/src/history.txt",
		"/C/Users/CHEF SEC/AppData/Roaming/Python/Python311-32/site-packages/pygments/lexers/shell.py",
		"/F/shellsy/src/comberloa.py",
		"/C/Program Files (x86)/Python311-32/Lib/types.py",
		"/F/shellsy/shellsy/expressions.py",
		"/F/shellsy/shellsy/topics/main.py",
		"/F/shellsy/build.bat",
		"/F/shellsy/attack.py",
		"/F/shellsy/main.py",
		"/F/shellsy/djamago/__init__.py",
		"/F/shellsy/dictionary/en.yaml",
		"/F/shellsy/build/shellsy/xref-shellsy.html",
		"/F/shellsy/build/shellsy/Splash-00_script.tcl",
		"/F/shellsy/icon.png",
		"/F/shellsy/shellsy/__init__.py",
		"/C/Users/CHEF SEC/AppData/Roaming/Python/Python311-32/site-packages/ttkbootstrap/utility.py",
		"/C/Users/CHEF SEC/AppData/Roaming/Python/Python311-32/site-packages/ttkbootstrap/toast.py",
		"/C/Users/CHEF SEC/AppData/Roaming/Python/Python311-32/site-packages/ttkbootstrap/tooltip.py",
		"/F/shellsy/attack/__init__.py",
		"/C/Users/CHEF SEC/AppData/Roaming/Python/Python311-32/site-packages/ttkbootstrap/icons.py",
		"/C/Users/CHEF SEC/AppData/Roaming/Python/Python311-32/site-packages/ttkbootstrap/style.py",
		"/C/Users/CHEF SEC/AppData/Roaming/Python/Python311-32/site-packages/ttkbootstrap/widgets.py",
		"/C/Users/CHEF SEC/AppData/Roaming/Python/Python311-32/site-packages/ttkbootstrap/colorutils.py",
		"/C/Users/CHEF SEC/AppData/Roaming/Python/Python311-32/site-packages/ttkbootstrap/window.py",
		"/F/djamago/README.md",
		"/F/djamago/.github/workflows/python-publish.yml",
		"/F/djamago/docs/conf.py",
		"/F/djamago/docs/index.rst",
		"/C/Users/CHEF SEC/AppData/Roaming/Sublime Text/Packages/User/black.sublime-build",
		"/F/djamago/docs/requirements.txt",
		"/F/djamago/.readthedocs.yaml",
		"/C/Users/CHEF SEC/AppData/Roaming/Sublime Text/Packages/subliminal/subl_py.py",
		"/F/djamago/docs/expressions.rst",
		"/F/djamago/docs/whatsnew.rst",
		"/F/djamago/docs/api.rst",
		"/F/djamago/requirements.txt",
		"/F/djamago/src/tests/test_parse.py",
		"/C/djamago/.github/workflows/python-publish.yml",
		"/C/djamago/src/tests/test_parse.py",
		"/C/djamago/test.py",
		"/C/djamago/src/setup.py",
		"/C/djamago/.github/workflows/test.yml",
		"/C/djamago/requirements.txt",
		"/C/djamago/README.md",
		"/C/djamago/src/djamago/__init__.py",
		"/C/djamago/src/tasty.py",
		"/C/djamago/src/faq.yaml",
		"/C/sublime_text/Data/Packages/User/pyparam.sublime-snippet",
		"/C/djamago/docs/index.rst",
		"/C/djamago/text_similarity.py",
		"/C/djamago/src/example/main.py",
		"/C/djamago/src/example/topics/main.py",
		"/C/djamago/src/example/topics/djamago.py",
		"/C/djamago/src/example/<string>",
		"/C/djamago/docs/conf.py"
	],
	"find":
	{
		"height": 42.0
	},
	"find_in_files":
	{
		"height": 101.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"(?<!\\.)WrongLiteral",
			"WrongLiteral",
			"exceptions",
			"delf",
			"STACKTRACE",
			" \":",
			"pos",
			"fullstring",
			"integer",
			"uni_name",
			"ArgumentError",
			"S_Exception",
			"class Command",
			"\\bArguments",
			"\\bExpression",
			"WrongExpression",
			"\\bVariable",
			"item",
			"\\bLiteral\\b",
			"Literal",
			"self",
			"class Shell\\b",
			"\\bShell\\b",
			"S_Shell",
			"S_Arg",
			"evaluate_li",
			"text",
			"\",[^,]*\"",
			"\\(\\[eE\\]\\[\\+\\-\\]\\?\\\\\\\\d\\(\\?\\:_\\?\\\\\\\\d\\)\\*\\)",
			"([eE][+-]?\\\\d(?:_?\\\\d)*)?",
			"aliases_",
			"parent_text",
			"rich.syntax",
			"Stack",
			"log\\.log",
			"\\bprint",
			"StartMenuFolder",
			"!define MUI_PAGE_STARTMENU Application $StartMenuFolder",
			"FUNCTION",
			"list",
			"\\$fg",
			"\\$bg",
			"$StartMenuFolder",
			"STARTMENU",
			"SecDummy",
			"Dummy Section",
			"print",
			"self",
			"StatusText",
			"\\\\(N\\{.*?\\}|u[a-fA-F0-9]{4}|U[a-fA-F0-9]{8})",
			"\\$",
			"interp",
			"py-string",
			"py.*string",
			"s",
			"z",
			"a",
			"README",
			"List",
			"ansimagenta",
			"unterminated",
			"unterminated string literal",
			"ShellsyNtaxError unterminated string literal",
			"<call>",
			"<arguments>",
			"evaluate",
			"python-expression\"",
			"def bind",
			"\\$",
			"text",
			"shellsy-statem",
			"number",
			"expression",
			"double",
			"example\\-c",
			"print",
			" =",
			"ArgumentTypeMismatch",
			"helps",
			"self",
			"split_help",
			"__help__",
			"doc",
			"Doc",
			"console",
			"error",
			"value",
			"string_parts",
			"append",
			"ShellsyNtaxError",
			"or",
			"line",
			"shell",
			"ShellsyWord",
			"_UnionGenericAlias",
			"class.+Union",
			"class.+Union\\b",
			"Union",
			"self",
			"(?!py-)tdqs",
			"include.+'(?!py\\-)([\\w\\-]+)'",
			"(?<=include)'(?!py\\-)([\\w\\-]+)'",
			"(?<=include.+)'(?!py\\-)([\\w\\-]+)'",
			"'(?!py\\-)([\\w\\-]+)'",
			"expr\\-inside\\-fstring",
			"expr-inside-fstring",
			"fstring",
			"bytesescape",
			"stringescape",
			"fstringescape",
			"keyword\\b",
			"keyword.*\\=",
			"keyword\\b",
			"keyword",
			"words",
			"default",
			"using",
			"DelegatingLexer",
			"Other",
			"String",
			"PythonLexer",
			"evaluate",
			"print",
			"inspect",
			"self",
			"Variable",
			"part",
			"ifstring"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"exceptions.WrongLiteral",
			"S_Arguments",
			"S_Expression",
			"WrongLiteral",
			"S_Variable",
			"Optional[S_Object]",
			"Shell",
			"Shellsy",
			"print",
			"log.log",
			"\"FFFFFF\"",
			"\"112233\"",
			"shellsy",
			"help",
			"__doc__",
			"help",
			"Help",
			"Word",
			"shell",
			"'py-$1'",
			"string",
			"",
			"update_idletasks"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8293,
						"regions":
						{
						},
						"selection":
						[
							[
								8293,
								8293
							]
						],
						"settings":
						{
							"auto_complete": false,
							"auto_indent": false,
							"color_helper.scan":
							{
								"allow_scanning": false,
								"color_class":
								[
									{
										"class": "css-level-4",
										"scopes": ""
									}
								],
								"color_trigger": "(?xi)\n(?:\n    \\b(?<![-#&$])(?:\n        color\\((?!\\s*-)|(?:hsla?|(?:ok)?(?:lch|lab)|hwb|rgba?)\\(\n) |\n\\b(?<![-#&$])[\\w]{3,}(?![(-])\\b|(?<![&])\\#)\n",
								"current_ext": null,
								"current_syntax": "Text/Plain text",
								"enabled": true,
								"last_updated": 1723419882.78,
								"scanning": "-comment"
							},
							"gutter": false,
							"rainbow_checked": true,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_width": 2,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 2608.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 483,
						"regions":
						{
						},
						"selection":
						[
							[
								483,
								483
							]
						],
						"settings":
						{
							"__vi_external_disable": true,
							"auto_complete": false,
							"auto_complete_commit_on_tab": false,
							"bracket_highlighter.clone_locations":
							{
							},
							"bracket_highlighter.ignore": true,
							"color_helper.refresh": true,
							"color_scheme": "Terminus.hidden-color-scheme",
							"draw_centered": false,
							"draw_indent_guides": false,
							"draw_unicode_white_space": false,
							"draw_white_space": "none",
							"font_face": "Lucide Console",
							"font_size": 10,
							"gutter": false,
							"highlight_line": false,
							"is_widget": true,
							"rainbow_checked": true,
							"result_base_dir": "F:\\shellsy\\src",
							"result_file_regex": null,
							"result_line_regex": null,
							"rulers":
							[
								[
									50,
									"dotted"
								],
								[
									79,
									"solid",
									2
								],
								500
							],
							"scroll_past_end": true,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"terminus.highlight_counter": 948,
							"terminus_view": true,
							"terminus_view.args":
							{
								"auto_close": true,
								"cancellable": false,
								"cmd":
								[
									"cmd.exe"
								],
								"cwd": "F:\\shellsy\\src",
								"default_title": "Command Prompt",
								"env":
								{
									"TERMINUS_SUBLIME": "1",
									"TERM_PROGRAM": "Terminus-Sublime"
								},
								"file_regex": null,
								"line_regex": null,
								"panel_name": "Terminus",
								"reactivable": true,
								"show_in_panel": null,
								"tag": null,
								"timeit": false,
								"title": null
							},
							"terminus_view.cancellable": false,
							"terminus_view.key.ctrl+k": true,
							"terminus_view.key.ctrl+p": true,
							"terminus_view.natural_keyboard": true,
							"terminus_view.reactivable": true,
							"terminus_view.tag": null,
							"terminus_view.viewport_y": 0.0,
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3259,
						"regions":
						{
						},
						"selection":
						[
							[
								3259,
								3259
							]
						],
						"settings":
						{
							"__vi_external_disable": true,
							"auto_complete": false,
							"auto_complete_commit_on_tab": false,
							"bracket_highlighter.clone_locations":
							{
							},
							"bracket_highlighter.ignore": true,
							"color_helper.scan":
							{
								"allow_scanning": false,
								"color_class":
								[
									{
										"class": "css-level-4",
										"scopes": ""
									}
								],
								"color_trigger": "(?xi)\n(?:\n    \\b(?<![-#&$])(?:\n        color\\((?!\\s*-)|(?:hsla?|(?:ok)?(?:lch|lab)|hwb|rgba?)\\(\n) |\n\\b(?<![-#&$])[\\w]{3,}(?![(-])\\b|(?<![&])\\#)\n",
								"current_ext": null,
								"current_syntax": "Text/Plain text",
								"enabled": true,
								"last_updated": 1723419882.78,
								"scanning": "-comment"
							},
							"color_scheme": "Terminus.hidden-color-scheme",
							"draw_centered": false,
							"draw_indent_guides": false,
							"draw_unicode_white_space": false,
							"draw_white_space": "none",
							"font_face": "Lucide Console",
							"font_size": 10,
							"gutter": false,
							"highlight_line": false,
							"is_widget": true,
							"rainbow_checked": true,
							"result_base_dir": "F:\\shellsy\\src",
							"result_file_regex": null,
							"result_line_regex": null,
							"rulers":
							[
								[
									50,
									"dotted"
								],
								[
									79,
									"solid",
									2
								],
								500
							],
							"scroll_past_end": true,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"terminus.highlight_counter": 7,
							"terminus_view": true,
							"terminus_view.args":
							{
								"auto_close": true,
								"cancellable": false,
								"cmd":
								[
									"cmd.exe"
								],
								"cwd": "F:\\shellsy\\src",
								"default_title": "Command Prompt",
								"env":
								{
									"TERMINUS_SUBLIME": "1",
									"TERM_PROGRAM": "Terminus-Sublime"
								},
								"file_regex": null,
								"line_regex": null,
								"panel_name": "Terminus 3",
								"reactivable": true,
								"show_in_panel": null,
								"tag": null,
								"timeit": false,
								"title": null
							},
							"terminus_view.cancellable": false,
							"terminus_view.key.ctrl+k": true,
							"terminus_view.key.ctrl+p": true,
							"terminus_view.natural_keyboard": true,
							"terminus_view.reactivable": true,
							"terminus_view.tag": null,
							"terminus_view.viewport_y": 0.0,
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/shellsy/lang.py",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11447,
						"regions":
						{
						},
						"selection":
						[
							[
								3816,
								3816
							]
						],
						"settings":
						{
							"color_helper.scan":
							{
								"allow_scanning": false,
								"color_class":
								[
									{
										"class": "css-level-4",
										"scopes": ""
									}
								],
								"color_trigger": "(?xi)\n(?:\n    \\b(?<![-#&$])(?:\n        color\\((?!\\s*-)|(?:hsla?|(?:ok)?(?:lch|lab)|hwb|rgba?)\\(\n) |\n\\b(?<![-#&$])[\\w]{3,}(?![(-])\\b|(?<![&])\\#)\n",
								"current_ext": ".py",
								"current_syntax": "subliminal/subliminal-Python",
								"enabled": true,
								"last_updated": 1723419882.78,
								"scanning": "-comment"
							},
							"rainbow_checked": true,
							"syntax": "Packages/subliminal/subliminal-Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2184.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 3,
					"file": "src/shellsy/lang.py",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11447,
						"regions":
						{
						},
						"selection":
						[
							[
								11447,
								11447
							]
						],
						"settings":
						{
							"color_helper.scan":
							{
								"allow_scanning": false,
								"color_class":
								[
									{
										"class": "css-level-4",
										"scopes": ""
									}
								],
								"color_trigger": "(?xi)\n(?:\n    \\b(?<![-#&$])(?:\n        color\\((?!\\s*-)|(?:hsla?|(?:ok)?(?:lch|lab)|hwb|rgba?)\\(\n) |\n\\b(?<![-#&$])[\\w]{3,}(?![(-])\\b|(?<![&])\\#)\n",
								"current_ext": ".py",
								"current_syntax": "subliminal/subliminal-Python",
								"enabled": true,
								"last_updated": 1723419882.78,
								"scanning": "-comment"
							},
							"color_scheme": "Neon.sublime-color-scheme",
							"rainbow_checked": true,
							"syntax": "Packages/subliminal/subliminal-Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2691.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 30.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.955076370171,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.Terminus":
	{
		"height": 187.0
	},
	"output.Terminus 2":
	{
		"height": 134.0
	},
	"output.Terminus 3":
	{
		"height": 151.0
	},
	"output.Terminus 4":
	{
		"height": 146.0
	},
	"output.Terminus 5":
	{
		"height": 126.0
	},
	"output.Terminus 6":
	{
		"height": 220.0
	},
	"output.diff_views":
	{
		"height": 527.0
	},
	"output.exec":
	{
		"height": 114.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.golang_build":
	{
		"height": 126.0
	},
	"output.gotools_syntax_errors":
	{
		"height": 98.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.stino_build_panel":
	{
		"height": 0.0
	},
	"output.stino_panel":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "shellsy.sublime-project",
	"replace":
	{
		"height": 76.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"F:\\sbook\\backend\\backend.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 253.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
